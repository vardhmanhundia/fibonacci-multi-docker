version: 2.1

orbs:
  eb: circleci/aws-elastic-beanstalk@2.0.1

jobs:
  client_testing:
    docker:
      - image: cimg/base:2022.03
    steps:
      - checkout
      - setup_remote_docker:
          version: "20.10.11"
      - run:
          command: docker build -t vardhmanhundia/client-test -f ./client-typescript/Dockerfile.dev ./client-typescript
          name: building the client for testing
      - run:
          command: docker run vardhmanhundia/client-test npm test
          name: run the client tests
          no_output_timeout: 10s
  build_and_push:
    docker:
      - image: cimg/base:2022.03
    steps:
      - checkout
      - setup_remote_docker:
          version: "20.10.11"
      - run:
          command: docker build -t vardhmanhundia/multi-client-2 ./client-typescript
          name: building the production docker image
      - run:
          command: docker build -t vardhmanhundia/multi-worker-2 ./worker
          name: building the production docker image
      - run:
          command: docker build -t vardhmanhundia/multi-service-2 ./server
          name: building the production docker image
      - run:
          command: docker build -t vardhmanhundia/multi-nginx-2 ./nginx
          name: building the production docker image
      - run:
          command: echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_ID" --password-stdin
          name: docker login
      - run:
          command: |
            docker push vardhmanhundia/multi-client-2
            docker push vardhmanhundia/multi-worker-2
            docker push vardhmanhundia/multi-service-2
            docker push vardhmanhundia/multi-nginx-2

    env_setup:
      - eb/setup
      - run:
          name: Verify EB install
          command: |
            command -v eb >/dev/null 2>&1 || { echo >&2 "EB cli failed to install or persist to the path"; exit 1; }
workflows:
  version: 2
  testing:
    jobs:
      - client_testing
      - build_and_push
      - env_setup:
          requires:
            - build_and_push
          filters:
            branches:
              only: master
      - eb/deploy:
          post-steps:
            - run:
                name: Deploying to Elastic Benastalk
                working_directory: .
                command: curl $(eb status | grep CNAME | cut -d ":" -f 2)
          context: [CPE_ORBS_AWS]
          environment-name: sample-app-dev
          application-name: sample_app
          label: test-label
          app-dir: .
          requires:
            - env_setup
          filters:
            branches:
              only: master
